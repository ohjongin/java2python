#!/usr/bin/env python
# -*- coding: utf-8 -*-
import sys

from antlr import ASTVisitor

from java2python.lib import lexer
from java2python.lib import parser

try:
    import psyco
except (ImportError, ):
    pass
else:
    psyco.full()


class Printer(ASTVisitor):
     def visit(self, node, level=0):
        if not node:
            return
        txt = node.getText()
        typ = node.getType()
        print '%s%s:%s' % ('    '*level, typ, txt, )
        self.visit(node.getFirstChild(), level+1)
        if typ in (parser.CLASS_DEF, parser.PACKAGE_DEF, parser.IMPORT):
            print
        self.visit(node.getNextSibling(), level)


def show(filename):
    if not filename:
        args = []
    else:
        args = [filename, ]
    
    L = lexer.Lexer(*args)
    P = parser.Parser(L)
    P.setFilename(L.getFilename())

    try:
        P.compilationUnit()
    except (Exception, ), exc:
       print '*** exception while parsing:'
       print exc
       return 1
    
    ast = P.getAST()
    ast = P.getAST()
    if not ast:
       print '*** error: no AST generated.'
       return 2

    printer = Printer()
    printer.visit(ast)
    return 0


if __name__ == '__main__':
    try:
        name = sys.argv[1]
    except (IndexError, ):
        name = None
    ret = show(name)
    sys.exit(ret)
